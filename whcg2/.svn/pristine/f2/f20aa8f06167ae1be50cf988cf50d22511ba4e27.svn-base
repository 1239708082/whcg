package com.ltsk.whcg.service.impl;
/**
 * zd
 * 环卫界面餐厨垃圾处理量数据
 * */
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ltsk.whcg.base.mapper.GetCcljWeightMapper;
import com.ltsk.whcg.entity.GetCcljWeight;
import com.ltsk.whcg.service.GetCcljWeightService;

import io.vertx.core.json.JsonArray;
import lombok.extern.slf4j.Slf4j;
@Service
@Slf4j
public class GetCcljWeightServiceImpl implements GetCcljWeightService{
	@Autowired
	private GetCcljWeightMapper getCcljWeightMapper;
	@Override
	public List<List<GetCcljWeight>> getWeight() {
		try {
			List<GetCcljWeight> weight_week = getCcljWeightMapper.getWright();
			Map<String, List<GetCcljWeight>> collect = weight_week.stream().collect(Collectors.groupingBy(GetCcljWeight::getDepname));
	    	Set<String> keySet = collect.keySet();
	    	List<List<GetCcljWeight>> list =new ArrayList<>();
	    	for (String string : keySet) {
	    		list.add(collect.get(string));
			}
			return list;
		} catch (Exception e) {
			e.printStackTrace();
			log.error("获取餐厨垃圾处理厂一周处理量失败!!");
		}
		return null;
	}
	@Override
	public List<GetCcljWeight> getWrightOrgname() {
		try {
			return getCcljWeightMapper.getWrightOrgname();
		} catch (Exception e) {
			log.error("获取餐厨垃圾分区实时统计失败!!");

		}
		return null;
	}
	@Override
	public List<GetCcljWeight> getWeightByXzqh(String xzqh) {
		return getCcljWeightMapper.getWeightByXzqh(xzqh);
	}
	@Override
	public List<GetCcljWeight> getWeightOrgnameByXzqh(String xzqh) {
		List<GetCcljWeight> result = new ArrayList<>();
		List<GetCcljWeight> weightOrgnameByXzqh = getCcljWeightMapper.getWeightOrgnameByXzqh(xzqh);
		for (int i = 0; i < 12; i++) {
			GetCcljWeight getCcljWeight2 = new GetCcljWeight();
			getCcljWeight2.setTimes(i*2+"~"+(i+1)*2);
			getCcljWeight2.setWeight(0.0);
			result.add(getCcljWeight2);
		}
		for (int i = 0; i < weightOrgnameByXzqh.size(); i++) {
			weightOrgnameByXzqh.get(i).setTimes(i*2+"~"+(i+1)*2);
		}
		for (GetCcljWeight getCcljWeight : weightOrgnameByXzqh) {
			for (GetCcljWeight r : result) {
				if (getCcljWeight.getTimes().equals(r.getTimes())) {
					r.setWeight(getCcljWeight.getWeight());
				}
				
			}
		}
		return result;
	}
	@Override
	public Double getWeight_sum(String xzqh) {
		try {
			if(xzqh.equals("全市")){
				xzqh=null;
			}
			return getCcljWeightMapper.getWeight_sum(xzqh);
		} catch (Exception e) {
			log.error("获取垃圾处理总量失败!!!");
		}
		return null;
	}

}
