package com.ltsk.whcg.service.impl;

import com.ltsk.whcg.service.HouseholdGarbageFactoryService;

import lombok.extern.slf4j.Slf4j;

import com.ltsk.whcg.base.mapper.HouseholdGarbageFactoryMapper;
import com.ltsk.whcg.entity.GarbageNow;
import com.ltsk.whcg.entity.GetCcljWeight;
import com.ltsk.whcg.entity.Gfczzd;
import com.ltsk.whcg.entity.LastWeekSHLJ;
import com.ltsk.whcg.listener.XZQHListener;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.w3c.dom.ls.LSException;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
@Service
@Slf4j
public class HouseholdGarbageFactoryServiceImpl implements HouseholdGarbageFactoryService{

    @Autowired
    private HouseholdGarbageFactoryMapper householdGarbageFactoryMapper;
    @Override
    public List<Gfczzd> getAll(String xzqhname) {
    	String string_xzqh = XZQHListener.XZQHMap.get(xzqhname);
        try {
        	if(string_xzqh.equals("全市")){
        		string_xzqh=null;
        	}
			return householdGarbageFactoryMapper.getAll(string_xzqh);
		} catch (Exception e) {
			log.error("生活垃圾处理厂信息查询失败!!");
			return new ArrayList<>();
		}
    }
    
	@Override
	public List<List<LastWeekSHLJ>> getLastWeek(String xzqh) {
		
		List<List<LastWeekSHLJ>> days = new ArrayList<>();
		try {
			if("420100000000".equals(xzqh)){
				
				List<LastWeekSHLJ> day = householdGarbageFactoryMapper.getLastWeek();
			
				List<String> nameList = new ArrayList<>();
				for (LastWeekSHLJ lastWeekSHLJ : day) {
					lastWeekSHLJ.setDay(lastWeekSHLJ.getDay().substring(5));;
					if(!nameList.contains(lastWeekSHLJ.getHandleunit())){
						nameList.add(lastWeekSHLJ.getHandleunit());
					}
				}
				for (String namelist :nameList) {
					List<LastWeekSHLJ> day1 = new ArrayList<>();
					for(LastWeekSHLJ lastWeekSHLJ : day){
						if(lastWeekSHLJ.getHandleunit().equals(namelist)){
							day1.add(lastWeekSHLJ);
						}
					}
					days.add(day1);
					
				}
			
				return days;
			}else{
				
				xzqh = XZQHListener.XZQHMap.get(xzqh);
				days.add(householdGarbageFactoryMapper.getLastWeekByXzqh(xzqh));
				return days;
			}
		} catch (Exception e) {
			log.error("生活垃圾处理厂前七日信息查询失败!!");
			return new ArrayList<>();
			
		}
		
	}
	
	
	//获得生活垃圾处理厂实时信息
	@Override
	public List<GarbageNow> getNowGarbage(String xzqh) {
		try {
			if("420100000000".equals(xzqh)){
				
				List<GarbageNow> list =  householdGarbageFactoryMapper.getPresentGarbage();
				return list;
			}else{
				xzqh = XZQHListener.XZQHMap.get(xzqh);
				List<GarbageNow> result = new ArrayList<>();
				List<GarbageNow> list = householdGarbageFactoryMapper.getPerByXzqh(xzqh);
				for (int i = 0; i < 12; i++) {
					GarbageNow gn=new GarbageNow();
					gn.setTime(i+"");
					gn.setWeigh(0.0+"");
					result.add(gn);
				}
				for (int i = 0; i < result.size(); i++) {
					for (int j = 0; j < list.size(); j++) {
						if(result.get(i).getTime().equals(list.get(j).getTime())){
							result.get(i).setWeigh(list.get(j).getWeigh());
							break;
						}
					}
				}
				return result;
			}
		} catch (Exception e) {
			log.error("生活垃圾处理厂实时信息查询失败!!");
			System.out.println(e.getMessage());
			return new ArrayList<>();
			
		}
		
	}

	//查询今日垃圾总量
	//TODO
	@Override
	public Object getSumGarbage(String xzqh) {
		
		xzqh = XZQHListener.XZQHMap.get(xzqh);
        try {
        	if(xzqh.equals("全市")){
        		xzqh=null;
        	}
			return householdGarbageFactoryMapper.getSumGarbage(xzqh);
		} catch (Exception e) {
			log.error("生活垃圾处理厂信息查询失败!!");
			return null;
		}
	}
	
	
	
	
}
