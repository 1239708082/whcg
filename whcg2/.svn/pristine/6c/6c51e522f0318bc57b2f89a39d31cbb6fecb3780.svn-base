package com.ltsk.whcg.listener;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.annotation.WebListener;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.ltsk.whcg.service.BridgeDefectRecordService;

import lombok.extern.slf4j.Slf4j;

@WebListener
@Slf4j
public class BridgeDefectListener implements ServletContextListener {
	@Autowired
	private BridgeDefectRecordService bdrs;
	
	public static Map<String, List<Map<String, Object>>> bridgeDefectNumMap=new HashMap<>();

	@Override
	public void contextInitialized(ServletContextEvent servletContextEvent) {
		WebApplicationContextUtils.getRequiredWebApplicationContext(servletContextEvent.getServletContext())
		.getAutowireCapableBeanFactory().autowireBean(this);
		try {
			List<Map<String, Object>> bridgeDefectNumGroupStatus = bdrs.getBridgeDefectNumGroupStatus();
			List<Map<String, Object>> bridgeDefectNumGroupUnit = bdrs.getBridgeDefectNumGroupUnit();
			bridgeDefectNumMap.put("bridgeDefectNumGroupStatus", bridgeDefectNumGroupStatus);
			bridgeDefectNumMap.put("bridgeDefectNumGroupUnit", bridgeDefectNumGroupUnit);
			log.info("桥梁病害数初始化成功！!");
		} catch (Exception e) {
			log.error("桥梁病害数初始化失败！！");
		}
		
	}

	@Override
	public void contextDestroyed(ServletContextEvent sce) {
		
	}
	
	
}
